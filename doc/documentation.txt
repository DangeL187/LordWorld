------------------------------------------------------------
Lord World (LW) by DangeL
------------------------------------------------------------
Graphics/NewSprite.h

NewSprite(std::string name)
Creates a new sprite.

getSprite()
Returns created sprite.

createSprite(std::string name) //global function
Creates and returns a new sprite using NewSprite class.
------------------------------------------------------------
Map/Map.h

getMapHeight()
Returns map's height.

getMapWidth()
Returns map's width.
------------------------------------------------------------
Map/MapManager.h <-- Map

MapManager()
Default constructor.

setSprite(auto new_sprite)
Sets map's sprite.

setSpritePosition(int i, int j)
Sets map's sprite position.

getSprite()
Returns map's sprite.

setTileMapID(int i, int j, int id)
Sets a new map tile ID.

getTileMapID(int i, int j)
Returns the ID of the map tile.

defineTile(int it, int jt)
Sets a specific tile sprite depending on the tile's ID.
------------------------------------------------------------
Game/WindowManager.h

createWindow()
Creates new window.

viewGetCenterX()
Returns view's center X.

viewGetCenterY()
Returns view's center Y.

viewReset()
Resets view.

windowHandleEvents()
Starts event handler.

windowSetView()
Sets window's view.

windowClear()
Clears window.

windowDisplay()
Displays window.

windowIsOpen()
Returns whether the window is open.
------------------------------------------------------------
Game/Renderer.h <-- WindowManager

createMapSprite(auto& map_manager)
Creates new map's sprite.

createItemSprites()
Creates item sprites.

createMonsterSprites()
Creates monster sprites.

createGuiSprites()
Creates GUI sprites.

initText(auto& player)
Initialises text.

initImages()
Initialises sprites.

updateGuiSprites(auto& player)
Set's GUI sprites' position depending
on the view's position.

updateText(auto& player)
Sets text values and sets texts'
position depending on the view's position.

setText(auto& text, auto& font, auto size)
Auxiliary function that sets text's font and size.

guiTarget(auto& game)
Sets target system's GUI.
------------------------------------------------------------
Game/Game.h <-- Renderer

Game()
Default constructor.

initResources(auto& map_manager, auto& game)
Initialises text, images and sprites.

viewSetCenter()
Sets view's center.

createItem(int id, int x, int y)
Creates an item lying on the ground.

createPlayer(float x, float y, float w, float h)
Creates player.

createMonster(float x, float y, float w, float h, std::string name)
Creates monster.

createNPC(float x, float y, float w, float h, std::string name)
Creates NPC.

drawSprites(auto& map_manager)
Draws sprites and text.

updates(auto& map_manager, auto& game)
Starts handling timers, lvl, monsters' deaths, target system;
Updates images, text, GUI, player, monsters, NPC;

timers(auto& time, auto& game)
Timers handler.

targeting(auto& game)
Targeting handler.

gainLVL(auto& game)
Level gaining.

monsterDeath(auto& game)
Monsters' deaths handler.

spellDamaged(auto& game)
Define who is damaged with the spell.
------------------------------------------------------------
Info/Info.h

setInfo(bool is_item, int get_id, auto& text_info) //global function
Sets info about item or spell depending on it's ID.
------------------------------------------------------------
Items/Items.h

defineItemType(int id, auto& current_item_sprites, auto& item_sprites, auto& items_dropped) //global function
Defines item's type depending on it's ID.
------------------------------------------------------------
Spells/Spells.h

setImages(auto& game, int size, auto& arr1, auto& arr2)
Sets spell images.

spells(auto& time, auto& game)
Casts spell.
------------------------------------------------------------
Player/PlayerBase.h

attacks(auto& time, auto& game)
Attacks handler.

animations(auto& time, auto& game)
Animations handler.
------------------------------------------------------------
Player/Equipment.h

setEquipmentStats(auto& game, auto& inv_items)
Sets equipment stats.

setWeaponStats(auto& game, auto& inv_items)
Sets weapon stats.

setArmorStats(auto& game, auto& inv_items)
Sets armor stats.

setOtherStats(auto& inv_items)
Sets other stats.

checkWeaponsRange(auto& game, float get_x, float get_y)
Returns whether attack is possible depending on the weapon.
------------------------------------------------------------
Player/Keys.h
------------------------------------------------------------
Player/Player.h
------------------------------------------------------------
NPC/NPCBase.h
------------------------------------------------------------
NPC/NPC.h
------------------------------------------------------------
Monster/MonsterBase.h
------------------------------------------------------------
Monster/Monster.h
------------------------------------------------------------